/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var User_schema_pb = require('./User_schema_pb.js');
goog.object.extend(proto, User_schema_pb);
goog.exportSymbol('proto.storage.User_FindByRollAndNameRequest', null, global);
goog.exportSymbol('proto.storage.User_FindByRollAndNameResponse', null, global);
goog.exportSymbol('proto.storage.User_Query', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storage.User_FindByRollAndNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.storage.User_FindByRollAndNameRequest.repeatedFields_, null);
};
goog.inherits(proto.storage.User_FindByRollAndNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storage.User_FindByRollAndNameRequest.displayName = 'proto.storage.User_FindByRollAndNameRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.storage.User_FindByRollAndNameRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storage.User_FindByRollAndNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.storage.User_FindByRollAndNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storage.User_FindByRollAndNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.storage.User_FindByRollAndNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && proto.storage.User_Query.toObject(includeInstance, f),
    fieldsList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storage.User_FindByRollAndNameRequest}
 */
proto.storage.User_FindByRollAndNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storage.User_FindByRollAndNameRequest;
  return proto.storage.User_FindByRollAndNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storage.User_FindByRollAndNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storage.User_FindByRollAndNameRequest}
 */
proto.storage.User_FindByRollAndNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.storage.User_Query;
      reader.readMessage(value,proto.storage.User_Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.storage.User_Fields>} */ (reader.readPackedEnum());
      msg.setFieldsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storage.User_FindByRollAndNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storage.User_FindByRollAndNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storage.User_FindByRollAndNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.storage.User_FindByRollAndNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.storage.User_Query.serializeBinaryToWriter
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional User_Query query = 1;
 * @return {?proto.storage.User_Query}
 */
proto.storage.User_FindByRollAndNameRequest.prototype.getQuery = function() {
  return /** @type{?proto.storage.User_Query} */ (
    jspb.Message.getWrapperField(this, proto.storage.User_Query, 1));
};


/** @param {?proto.storage.User_Query|undefined} value */
proto.storage.User_FindByRollAndNameRequest.prototype.setQuery = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.storage.User_FindByRollAndNameRequest.prototype.clearQuery = function() {
  this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.storage.User_FindByRollAndNameRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated User_Fields fields = 2;
 * @return {!Array<!proto.storage.User_Fields>}
 */
proto.storage.User_FindByRollAndNameRequest.prototype.getFieldsList = function() {
  return /** @type {!Array<!proto.storage.User_Fields>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<!proto.storage.User_Fields>} value */
proto.storage.User_FindByRollAndNameRequest.prototype.setFieldsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.storage.User_Fields} value
 * @param {number=} opt_index
 */
proto.storage.User_FindByRollAndNameRequest.prototype.addFields = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.storage.User_FindByRollAndNameRequest.prototype.clearFieldsList = function() {
  this.setFieldsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storage.User_FindByRollAndNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.storage.User_FindByRollAndNameResponse.repeatedFields_, null);
};
goog.inherits(proto.storage.User_FindByRollAndNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storage.User_FindByRollAndNameResponse.displayName = 'proto.storage.User_FindByRollAndNameResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.storage.User_FindByRollAndNameResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storage.User_FindByRollAndNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.storage.User_FindByRollAndNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storage.User_FindByRollAndNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.storage.User_FindByRollAndNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    User_schema_pb.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storage.User_FindByRollAndNameResponse}
 */
proto.storage.User_FindByRollAndNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storage.User_FindByRollAndNameResponse;
  return proto.storage.User_FindByRollAndNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storage.User_FindByRollAndNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storage.User_FindByRollAndNameResponse}
 */
proto.storage.User_FindByRollAndNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new User_schema_pb.User;
      reader.readMessage(value,User_schema_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storage.User_FindByRollAndNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storage.User_FindByRollAndNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storage.User_FindByRollAndNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.storage.User_FindByRollAndNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      User_schema_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.storage.User>}
 */
proto.storage.User_FindByRollAndNameResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.storage.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, User_schema_pb.User, 1));
};


/** @param {!Array<!proto.storage.User>} value */
proto.storage.User_FindByRollAndNameResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.storage.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.storage.User}
 */
proto.storage.User_FindByRollAndNameResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.storage.User, opt_index);
};


proto.storage.User_FindByRollAndNameResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.storage.User_Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.storage.User_Query.repeatedFields_, null);
};
goog.inherits(proto.storage.User_Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.storage.User_Query.displayName = 'proto.storage.User_Query';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.storage.User_Query.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.storage.User_Query.prototype.toObject = function(opt_includeInstance) {
  return proto.storage.User_Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.storage.User_Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.storage.User_Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    roll: jspb.Message.getFieldWithDefault(msg, 1, 0),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    nameList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.storage.User_Query}
 */
proto.storage.User_Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.storage.User_Query;
  return proto.storage.User_Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.storage.User_Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.storage.User_Query}
 */
proto.storage.User_Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRoll(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.storage.User_Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.storage.User_Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.storage.User_Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.storage.User_Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoll();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional int64 Roll = 1;
 * @return {number}
 */
proto.storage.User_Query.prototype.getRoll = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.storage.User_Query.prototype.setRoll = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp DeletedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.storage.User_Query.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.storage.User_Query.prototype.setDeletedat = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.storage.User_Query.prototype.clearDeletedat = function() {
  this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.storage.User_Query.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.storage.User_Query.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.storage.User_Query.prototype.setUpdatedat = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.storage.User_Query.prototype.clearUpdatedat = function() {
  this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.storage.User_Query.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string Name = 4;
 * @return {!Array<string>}
 */
proto.storage.User_Query.prototype.getNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.storage.User_Query.prototype.setNameList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.storage.User_Query.prototype.addName = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.storage.User_Query.prototype.clearNameList = function() {
  this.setNameList([]);
};


goog.object.extend(exports, proto.storage);

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x4c,
	0x4f, 0x95, 0x92, 0x09, 0x2d, 0x4e, 0x2d, 0x8a, 0x77, 0xcb, 0xcc, 0x4b, 0x71, 0xaa, 0x0c, 0xca,
	0xcf, 0xc9, 0x71, 0xcc, 0x4b, 0xf1, 0x4b, 0xcc, 0x4d, 0x85, 0x28, 0x93, 0x12, 0x05, 0xcb, 0x3a,
	0x17, 0xa5, 0x26, 0x96, 0xa4, 0x82, 0x98, 0x10, 0x61, 0xa3, 0xab, 0x8c, 0x5c, 0x7c, 0xc1, 0x10,
	0x03, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xb2, 0xb9, 0xc4, 0xb0, 0x9b, 0x24, 0xa4,
	0xa6, 0x07, 0xb5, 0x4b, 0x0f, 0xbb, 0x82, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x29, 0x75,
	0x82, 0xea, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x95, 0x18, 0x84, 0xc2, 0xb8, 0xf8, 0xd1, 0x1c,
	0x26, 0x24, 0x8f, 0xaa, 0x1b, 0x21, 0x03, 0x33, 0x5e, 0x01, 0xb7, 0x02, 0x98, 0xb9, 0x4e, 0x2c,
	0x51, 0x4c, 0x05, 0x49, 0x49, 0x6c, 0x60, 0x4f, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x45,
	0x2c, 0xbb, 0x96, 0x32, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StorageServiceClient is the client API for StorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageServiceClient interface {
	// Sends a greeting
	User_FindByRollAndName(ctx context.Context, in *User_FindByRollAndNameRequest, opts ...grpc.CallOption) (*User_FindByRollAndNameResponse, error)
	User_CreateUser(ctx context.Context, in *User_CreateUserRequest, opts ...grpc.CallOption) (*User_CreateUserResponse, error)
}

type storageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStorageServiceClient(cc grpc.ClientConnInterface) StorageServiceClient {
	return &storageServiceClient{cc}
}

func (c *storageServiceClient) User_FindByRollAndName(ctx context.Context, in *User_FindByRollAndNameRequest, opts ...grpc.CallOption) (*User_FindByRollAndNameResponse, error) {
	out := new(User_FindByRollAndNameResponse)
	err := c.cc.Invoke(ctx, "/storage.StorageService/User_FindByRollAndName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) User_CreateUser(ctx context.Context, in *User_CreateUserRequest, opts ...grpc.CallOption) (*User_CreateUserResponse, error) {
	out := new(User_CreateUserResponse)
	err := c.cc.Invoke(ctx, "/storage.StorageService/User_CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServiceServer is the server API for StorageService service.
type StorageServiceServer interface {
	// Sends a greeting
	User_FindByRollAndName(context.Context, *User_FindByRollAndNameRequest) (*User_FindByRollAndNameResponse, error)
	User_CreateUser(context.Context, *User_CreateUserRequest) (*User_CreateUserResponse, error)
}

// UnimplementedStorageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServiceServer struct {
}

func (*UnimplementedStorageServiceServer) User_FindByRollAndName(ctx context.Context, req *User_FindByRollAndNameRequest) (*User_FindByRollAndNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method User_FindByRollAndName not implemented")
}
func (*UnimplementedStorageServiceServer) User_CreateUser(ctx context.Context, req *User_CreateUserRequest) (*User_CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method User_CreateUser not implemented")
}

func RegisterStorageServiceServer(s *grpc.Server, srv StorageServiceServer) {
	s.RegisterService(&_StorageService_serviceDesc, srv)
}

func _StorageService_User_FindByRollAndName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_FindByRollAndNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).User_FindByRollAndName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.StorageService/User_FindByRollAndName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).User_FindByRollAndName(ctx, req.(*User_FindByRollAndNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_User_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User_CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).User_CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.StorageService/User_CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).User_CreateUser(ctx, req.(*User_CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.StorageService",
	HandlerType: (*StorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "User_FindByRollAndName",
			Handler:    _StorageService_User_FindByRollAndName_Handler,
		},
		{
			MethodName: "User_CreateUser",
			Handler:    _StorageService_User_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

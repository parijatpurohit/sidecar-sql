// Package {{.PackageName}} implements a server for the service.
package {{.PackageName}}

import (
{{- range .Imports}}
    {{.ImportKey}} "{{ .ImportPath }}"
{{- end}}
)

const (
	port = ":{{ .GrpcPort }}"
)

func Serve() {
	lis, err := net.Listen("tcp", port)
	if err != nil {
		log.Fatalf("failed to listen: %v", err)
	}
	s := grpc.NewServer()

	initializeDB()

	{{- range .Tables}}
	{{.TableNameLower}}Views := {{.TableNameLower}}views.GetViews()
	{{- end}}

	service := &handlers.Service{
	{{- range .Tables}}
		{{.TableName}}Views: {{.TableNameLower}}Views,
	{{- end}}
	}
	pb.RegisterStorageServiceServer(s, service)
	log.Printf("starting server on port: %v", port)
	if err := s.Serve(lis); err != nil {
		log.Fatalf("failed to serve: %v", err)
	}
}

func initializeDB() {
	sqlConfig := config.GetSQLConfig()
	_, err := sqlconn.Initialize(sqlConfig)
	if err != nil {
		log.Fatalf("error initialising storage: %v", err)
	}
}
